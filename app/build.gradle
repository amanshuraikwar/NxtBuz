apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: "$project.rootDir/git_version.gradle"
apply from: '../shared_dependencies.gradle'

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {

    signingConfigs {
        release {
            storeFile file(localProperties['keystore.file.path'])
            storePassword localProperties['keystore.password']
            keyAlias localProperties['keystore.key.alias']
            keyPassword localProperties['keystore.key.password']
        }
    }

    compileSdkVersion versions.compileSdk

    defaultConfig {
        applicationId names.applicationId
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode gitVersionCode
        versionName gitVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }

    sourceSets {
        main {
            // Adds exported schema location as app assets.
            assets.srcDirs += files("$projectDir/schemas".toString())
        }
        androidTest {
            assets.srcDirs += files("$projectDir/schemas".toString())
        }
    }

    ext {
        APP_NAME_DEBUG = "@string/app_name_debug"
        APP_NAME_RELEASE = "@string/app_name"
        APP_NAME_INTERNAL = "@string/app_name_internal"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".release"
            resValue "string", "google_maps_key", localProperties['google.maps.api.key.release']
            buildConfigField "String", "ltaAccountkey", "\""+localProperties['lta.account.key.release']+"\""
            manifestPlaceholders = [ appName : APP_NAME_RELEASE]
            debuggable false
        }
        internal {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".internal"
            resValue "string", "google_maps_key", localProperties['google.maps.api.key.release']
            buildConfigField "String", "ltaAccountkey", "\""+localProperties['lta.account.key.release']+"\""
            manifestPlaceholders = [ appName : APP_NAME_INTERNAL]
            debuggable true
            matchingFallbacks = ['release']
        }
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "google_maps_key", localProperties['google.maps.api.key.debug']
            buildConfigField "String", "ltaAccountkey", "\""+localProperties['lta.account.key.debug']+"\""
            manifestPlaceholders = [ appName : APP_NAME_DEBUG]
            debuggable true
        }
    }

    // apk file name
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = new File("NxtBuz-" + variant.versionName + "-(" + variant.versionCode + ")-" + variant.buildType.name + ".apk")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"

    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"

    implementation "com.google.android.gms:play-services-auth:${versions.playServices}"

    implementation("com.google.api-client:google-api-client-android:${versions.googleApiClient}") {
        exclude group: 'org.apache.httpcomponents'
    }

    implementation("com.google.apis:google-api-services-sheets:${versions.googleSheetsApi}") {
        exclude group: 'org.apache.httpcomponents'
    }

    // glide
    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"

    implementation "androidx.navigation:navigation-fragment-ktx:${versions.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.navigation}"

    // room
    implementation "androidx.room:room-runtime:${versions.room}"
    kapt "androidx.room:room-compiler:${versions.room}"
    implementation "androidx.room:room-ktx:${versions.room}"
    androidTestImplementation "androidx.room:room-testing:${versions.room}"

    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"

    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'

    implementation project(':multiitemadapter')
    kapt project(':annotationProcessors')
    compileOnly project(':annotations')

    implementation 'com.google.firebase:firebase-analytics:17.4.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // flipper
    debugImplementation 'com.facebook.flipper:flipper:0.35.0'
    debugImplementation 'com.facebook.soloader:soloader:0.9.0'
    debugImplementation 'com.facebook.flipper:flipper-network-plugin:0.35.0'

    releaseImplementation 'com.facebook.flipper:flipper-noop:0.35.0'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'