import io.github.amanshuraikwar.nxtbuz.buildSrc.Libs

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.google.android.gms.oss-licenses-plugin'

apply from: "$project.rootDir/git_version.gradle"

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {

    signingConfigs {
        release {
            storeFile file(localProperties['keystore.file.path'])
            storePassword localProperties['keystore.password']
            keyAlias localProperties['keystore.key.alias']
            keyPassword localProperties['keystore.key.password']
        }
    }

    compileSdkVersion buildConfig.compileSdk

    defaultConfig {
        applicationId names.applicationId
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode gitVersionCode
        versionName gitVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }

    sourceSets {
        main {
            // Adds exported schema location as app assets.
            assets.srcDirs += files("$projectDir/schemas".toString())
        }
        androidTest {
            assets.srcDirs += files("$projectDir/schemas".toString())
        }
    }

    ext {
        APP_NAME_DEBUG = "@string/app_name_debug"
        APP_NAME_RELEASE = "@string/app_name"
        APP_NAME_INTERNAL = "@string/app_name_internal"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".release"
            resValue "string", "google_maps_key", localProperties['google.maps.api.key.release']
            buildConfigField "String", "ltaAccountKey", "\""+localProperties['lta.account.key.release']+"\""
            manifestPlaceholders = [ appName : APP_NAME_RELEASE]
            debuggable false
        }
        internal {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".release"
            resValue "string", "google_maps_key", localProperties['google.maps.api.key.release']
            buildConfigField "String", "ltaAccountKey", "\""+localProperties['lta.account.key.release']+"\""
            manifestPlaceholders = [ appName : APP_NAME_INTERNAL]
            debuggable true
            matchingFallbacks = ['release']
        }
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "google_maps_key", localProperties['google.maps.api.key.debug']
            buildConfigField "String", "ltaAccountKey", "\""+localProperties['lta.account.key.debug']+"\""
            manifestPlaceholders = [ appName : APP_NAME_DEBUG]
            debuggable true
        }
    }

    // apk file name
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = new File(
                    "Next-Bus-SG-"
                            + variant.versionName
                            + "-(" + variant.versionCode + ")-"
                            + variant.buildType.name
                            + ".apk"
            )
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }

    buildFeatures {
        compose true
        buildConfig true
        resValues true

        // Disable unused AGP features
        aidl false
        renderScript false
        shaders false
        dataBinding false
        viewBinding false
    }

    composeOptions {
        kotlinCompilerExtensionVersion Libs.AndroidX.Compose.version
    }
}

dependencies {
    // needed for DI modules
    implementation project(':di')

    // UI modules
    implementation project(':onboarding-ui-android')
    implementation project(':search-ui-android')
    implementation project(':starred-ui-android')
    implementation project(':settings-ui-android')
    implementation project(':map-ui-android')
    implementation project(':busstop-ui-android')
    implementation project(':busroute-ui-android')

    // theme modules
    debugImplementation project(':basetheme-ui-android')
    internalImplementation project(':basetheme-ui-android')
    implementation project(':nxtbuztheme-ui-android')

    implementation Libs.Kotlin.stdlib

    implementation Libs.Coroutines.core
    implementation Libs.Coroutines.android

    implementation Libs.Google.material

    implementation Libs.AndroidX.Lifecycle.viewmodel

    implementation Libs.threeTenAbp

    implementation Libs.Dagger.library
    implementation Libs.Dagger.androidSupport
    kapt Libs.Dagger.compiler
    kapt Libs.Dagger.androidProcessor

    for (dependency in Libs.AndroidX.Compose.all) {
        implementation dependency
    }

    implementation Libs.Accompanist.insets

    implementation Libs.Google.analytics
    implementation Libs.Google.crashlytics
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'